# vim 简要操作 
----
##  esc  回到正常模式下的操作：
---
### 离开
**:q** 退出
**:!q** 强制退出
**:qw** 保存后退出
###删除： 
x ：删除光标所在字母
dw 从光标起始位删除该单词 字符
d￥ ：删除光标所在位及之后的行尾内容

使用删除操作符 d 的删除命令的格式如下：

        d        motion  
  其中：
​    d      - 删除操作符。
​    motion - 操作符的操作对象(在下面列出)。
  一个简短的动作列表：
​    w - 从当前光标当前位置直到下一个单词起始处，不包括它的第一个字符。
​    e - 从当前光标当前位置直到单词末尾，包括最后一个字符。
​    $ - 从当前光标当前位置直到当前行末。
​    
​     d   number (数字)        motion 

   d2w   从光标起始位  删除 之后  2个单词

dd  ： 删除该行
2dd ：删除两行
---
###置入（非文档编写）
p : 将删除的，粘贴到光标所在后方
*（如果删除的是行 ，则粘贴到光标所在行下方）*

---
###替换（非文档编写）
r  +  x  ：替换光标所在字母（字符） ；替换为字母  *x* ( x 代表 任意字母 字符)
**输入:/ motion1/motion2**&nbsp;  将motion1替换为motion2&nbsp; *只替换光标所在行第一个匹配串*

**输入:/ motion1/motion2**&nbsp; *将光标所在行所有motion1替换为motion2*

**输入   :#,#s/old/new/g** &nbsp;*其中 #,# 代表的是替换操作的若干行中首尾两行的行号*

**输入   :%s/old/new/g**   &nbsp;*  则是替换整个文件中的每个匹配串*

**输入   :%s/old/new/gc** &nbsp;*   会找到整个文件中的每个匹配串，并且对每个匹配串提示是否进行替换*

**R**&nbsp; 从光标开始替换，替换光标位的字符，直到 esc 退出

---
###更改
cw/ce   :   删除光标所在单词位置及该光标之后的字符（字母），并进入插入模式进行编写

c$  :  删除光标所在行之后的内容，并进入插入模式进行更改 

esc  :  回到正常模式
w  / e  /  $   ：     同 删除类

---
###撤销类的操作
u :撤销上一次操作（可累积）
U：恢复到原始状态
ctrl r : 撤销掉撤销命令  恢复以前的操作结果

---
###移动：
左 h      下 j         上  k           右  l
  ww : 光标向后移动两个单词的首位
  eee ：光标前后移动到第三
  个单词末尾
  0：光标移动到行首

---
###搜索

CTRL G  :  当前编辑文本光标所在行列  
 *再输入*
​            *G* &nbsp; &nbsp; 跳转到文件最后一行    
​            *gg* &nbsp; &nbsp; 跳转到第一行    
​            *之前光标所在行数+G*     &nbsp; &nbsp; 跳转之前所在位置


####字符串查找
/ ：输入需要查找的字符串 
*再* &nbsp; &nbsp; 按 &nbsp; n&nbsp; 向下查找上次字符串&nbsp; &nbsp; &nbsp; 按&nbsp; N&nbsp; 向上查找
？： 逆向查找 &nbsp; &nbsp; 此时，n&nbsp; N&nbsp; 反向
ctrl o &nbsp; 回到上一次查找的位置
ctrl  I&nbsp; 跳转到最新的位置

####查找配对括号
将光标停在括号处   按&nbsp; %&nbsp; 字符， 再次按回到第一个括号处

---
###复制粘贴
1.  &nbsp;**v**&nbsp; 进入可视模式，移动光标选取文本
2.  &nbsp;**y**&nbsp; 复制选取文本
3. &nbsp;**p**&nbsp;粘贴文本   &nbsp;&nbsp;&nbsp;*（**y** 还可当作操作符 如 **yw** 用来复制一个单词）*
---

---
## &nbsp;   插入模式下的操作（从正常模式到插入模式）

**i**&nbsp;在光标前插入字符
**A**&nbsp;在一行后插入字符
**a**&nbsp;在光标后插入字符
**o**&nbsp;在光标所在行的下方打开新的一行
**O**&nbsp;在光标所在行的上方打开新的一行
---
---
##  &nbsp;vim内执行外部命令(文件操作)

**:!ls 或 :!dir**&nbsp; 列举出当前目录的内容

**:w test** *将文件的改动保存到文件 test 中，其中 test 是文件名*

**:!rm test** *删除文件 test*

**v** &nbsp;进入可视模式 ；移动光标选取要操作的内容
**:** 进行操作准备  +&nbsp;*（d &nbsp;删除；w test 保存)*

**:r test**&nbsp; 将前面创建的 test 文件提取出来，置入到光标所在位置后

**:r !dir**&nbsp;读取dir命令的输出并将其放置到当前文件的光标文字后面

---

---

##设置
**:set xxx** xxx 可设置如
​         'ic''ignorecase'       查找时忽略字母大小写
​        'is' 'incsearch'        查找短语时显示部分匹配
​        'hls' 'hlsearch'        高亮显示所有的匹配短语
​     选项名可以用完整版本，也可以用缩略版本。
在选项前加上 no 可以关闭选项 如 **:set noic**

---

---
##help
- 按下 HELP 键 (如果键盘上有的话)
    ​    - 按下 F1 键 (如果键盘上有的话)
    ​    - 输入  :help <回车>


 1. 开始编辑 vimrc 文件，具体命令取决于您所使用的操作系统：
        :edit ~/.vimrc          这是 Unix 系统所使用的命令
        :edit $VIM/_vimrc       这是 MS-Windows 系统所使用的命令

  2. 接着读取 vimrc 示例文件的内容：
        :r $VIMRUNTIME/vimrc_example.vim

  3. 保存文件，命令为：
        :write

1. 输入 :help 或者按 <F1> 键或 <Help> 键可以打开帮助窗口。

  2. 输入 :help cmd 可以找到关于 cmd 命令的帮助。

  3. 输入 CTRL-W CTRL-W  可以使您在窗口之间跳转。

  4. 输入 :q 以关闭帮助窗口

  5. 您可以创建一个 vimrc 启动脚本文件用来保存您偏好的设置。

  6. 当输入 : 命令时，按 CTRL-D 可以查看可能的补全结果。
     按 <TAB> 可以使用一个补全。

  下次您启动 Vim 时，编辑器就会有了语法高亮的功能。
  您可以把您喜欢的各种设置添加到这个 vimrc 文件中。
  要了解更多信息请输入 :help vimrc-intro



